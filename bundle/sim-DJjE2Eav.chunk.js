import{K as e,L as a,N as t,O as s,m as l,l as n,Q as r,n as i,o,U as p,z as d,G as c,V as h,R as u,T as I,J as m,w as S}from"./preset_utils-Br4kXMK6.chunk.js";import{a5 as v,ax as f,S as g,a6 as P,ay as T,a8 as y,av as A,aa as O,ab as C,ad as k,ae as w,aq as b,ag as M,ah as E,a4 as F,ai as R,aj as L,al as G,b as x,am as D,az as K,ak as B,G as H,an as N,a as W,F as U,K as q,as as j,T as z}from"./detailed_results-DUvoKeQl.chunk.js";e({fieldName:"latencyMs",label:"Latency",labelTooltip:"Player latency, in milliseconds. Adds a delay to actions that cannot be spell queued."}),a({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:"Assume bleed always exists for 'Rend and Tear' calculations. Otherwise will only calculate based on own rip/rake/lacerate.",extraCssClasses:["within-raid-sim-hide"]});const V={inputs:[t({fieldName:"minCombosForRip",label:"Min Rip CP",labelTooltip:"Combo Point threshold for allowing a Rip cast",float:!1,positive:!0}),t({fieldName:"maxWaitTime",label:"Max Wait Time",labelTooltip:"Max seconds to wait for an Energy tick to cast rather than powershifting",float:!0,positive:!0}),t({fieldName:"preroarDuration",label:"Pre-Roar Duration",labelTooltip:"Seconds remaining on a prior Savage Roar buff at the start of the pull",float:!0,positive:!0}),s({fieldName:"maintainFaerieFire",label:"Maintain Faerie Fire",labelTooltip:"If checked, bundle Faerie Fire refreshes with powershifts. Ignored if an external Faerie Fire debuff is selected in settings."}),s({fieldName:"precastTigersFury",label:"Pre-cast Tiger's Fury",labelTooltip:"If checked, model a pre-pull Tiger's Fury cast 3 seconds before initiating combat."}),s({fieldName:"useShredTrick",label:"Use Shred Trick",labelTooltip:'If checked, enable the "Shred trick" micro-optimization. This should only be used on short fight lengths with full powershifting uptime.'})]},_={type:"TypeAPL",prepullActions:[{action:{activateAura:{auraId:{spellId:407988}}},doAtValue:{const:{val:"-8s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{catOptimalRotationAction:{maxWaitTime:2,minCombosForRip:3}}}]},J={type:"TypeAPL",prepullActions:[{action:{activateAura:{auraId:{spellId:407988}}},doAtValue:{const:{val:"-8s"}}}],priorityList:[{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:768}}}}},castSpell:{spellId:{spellId:768}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentManaPercent:{}},rhs:{const:{val:"40%"}}}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"14"}}}}]}},castSpell:{spellId:{spellId:29166}}}},{action:{autocastOtherCooldowns:{}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:407988}}}}},castSpell:{spellId:{spellId:407988}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"20"}}}},castSpell:{spellId:{spellId:417045}}}},{action:{condition:{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:409828}}}}},castSpell:{spellId:{spellId:409828}}}},{action:{condition:{and:{vals:[{auraIsKnown:{auraId:{spellId:16870}}},{auraIsActive:{auraId:{spellId:16870}}}]}},castSpell:{spellId:{spellId:8992}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpEq",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},{cmp:{op:"OpGe",lhs:{auraRemainingTime:{auraId:{spellId:407988}}},rhs:{const:{val:"7"}}}}]}},castSpell:{spellId:{spellId:9493}}}},{action:{condition:{not:{val:{dotIsActive:{spellId:{spellId:414684}}}}},castSpell:{spellId:{spellId:414684}}}},{action:{condition:{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:1823}}}}},castSpell:{spellId:{spellId:1823}}}},{action:{castSpell:{spellId:{spellId:8992}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"14"}}}},{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{const:{val:"500"}}}},{auraIsActive:{auraId:{spellId:17061,rank:5}}}]}},castSpell:{spellId:{spellId:768}}}}]},Q={type:"TypeAPL",prepullActions:[{action:{activateAura:{auraId:{spellId:407988}}},doAtValue:{const:{val:"-8s"}}}],priorityList:[{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:768}}}}},castSpell:{spellId:{spellId:768}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{math:{op:"OpAdd",lhs:{currentMana:{}},rhs:{const:{val:"1500.0"}}}},rhs:{math:{op:"OpDiv",lhs:{currentMana:{}},rhs:{currentManaPercent:{}}}}}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{math:{op:"OpSub",lhs:{spellCurrentCost:{spellId:{spellId:1824,rank:3}}},rhs:{const:{val:"20.2"}}}}}},{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}},{not:{val:{auraIsActive:{auraId:{spellId:417141}}}}},{auraIsKnown:{auraId:{spellId:17061,rank:5}}},{gcdIsReady:{}}]}},castSpell:{spellId:{itemId:12662}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentMana:{}},rhs:{math:{op:"OpMul",lhs:{const:{val:"2.0"}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}}}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{math:{op:"OpSub",lhs:{spellCurrentCost:{spellId:{spellId:1824,rank:3}}},rhs:{const:{val:"20.2"}}}}}},{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}},{not:{val:{auraIsActive:{auraId:{spellId:417141}}}}},{auraIsKnown:{auraId:{spellId:17061,rank:5}}},{gcdIsReady:{}},{not:{val:{and:{vals:[{spellIsKnown:{spellId:{itemId:12662}}},{spellIsReady:{spellId:{itemId:12662}}}]}}}}]}},castSpell:{spellId:{otherId:"OtherActionPotion"}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentManaPercent:{}},rhs:{const:{val:"40%"}}}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{math:{op:"OpSub",lhs:{spellCurrentCost:{spellId:{spellId:1824,rank:3}}},rhs:{const:{val:"20.2"}}}}}},{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{math:{op:"OpAdd",lhs:{spellCurrentCost:{spellId:{spellId:29166}}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}}}},{not:{val:{auraIsActive:{auraId:{spellId:417141}}}}},{auraIsKnown:{auraId:{spellId:17061,rank:5}}},{not:{val:{or:{vals:[{and:{vals:[{spellIsKnown:{spellId:{itemId:12662}}},{spellIsReady:{spellId:{itemId:12662}}}]}},{and:{vals:[{spellIsKnown:{spellId:{otherId:"OtherActionPotion"}}},{spellIsReady:{spellId:{otherId:"OtherActionPotion"}}}]}}]}}}}]}},castSpell:{spellId:{spellId:29166}}}},{action:{condition:{and:{vals:[{or:{vals:[{and:{vals:[{not:{val:{auraIsActive:{auraId:{spellId:417141}}}}},{cmp:{op:"OpLt",lhs:{currentEnergy:{}},rhs:{math:{op:"OpSub",lhs:{spellCurrentCost:{spellId:{spellId:1824,rank:3}}},rhs:{const:{val:"20.2"}}}}}}]}},{and:{vals:[{and:{vals:[{auraIsActive:{auraId:{spellId:417141}}},{spellIsKnown:{spellId:{spellId:417141}}}]}},{cmp:{op:"OpLt",lhs:{currentEnergy:{}},rhs:{spellCurrentCost:{spellId:{spellId:9829,rank:4}}}}}]}}]}},{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}},{auraIsKnown:{auraId:{spellId:17061,rank:5}}}]}},castSpell:{spellId:{spellId:768}}}},{action:{autocastOtherCooldowns:{}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"20"}}}},{and:{vals:[{cmp:{op:"OpGt",lhs:{timeToEnergyTick:{}},rhs:{gcdTimeToReady:{}}}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"40"}}}}]}}]}},castSpell:{spellId:{spellId:417045}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:407988}}}}},castSpell:{spellId:{spellId:407988}}}},{action:{condition:{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:409828}}}}},castSpell:{spellId:{spellId:409828}}}},{action:{condition:{and:{vals:[{auraIsKnown:{auraId:{spellId:16870}}},{auraIsActiveWithReactionTime:{auraId:{spellId:16870}}}]}},castSpell:{spellId:{spellId:9829}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpEq",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},{cmp:{op:"OpGe",lhs:{auraRemainingTime:{auraId:{spellId:407988}}},rhs:{const:{val:"7s"}}}},{cmp:{op:"OpGe",lhs:{remainingTime:{}},rhs:{const:{val:"10s"}}}},{not:{val:{dotIsActive:{spellId:{spellId:9752,rank:4}}}}}]}},castSpell:{spellId:{spellId:9752}}}},{action:{castSpell:{spellId:{spellId:9829}}}},{hide:!0,action:{condition:{and:{vals:[{runeIsEquipped:{runeId:{spellId:414684}}},{auraIsKnown:{auraId:{spellId:17061,rank:5}}},{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}},{cmp:{op:"OpGt",lhs:{timeToEnergyTick:{}},rhs:{const:{val:"1.52s"}}}},{not:{val:{dotIsActive:{spellId:{spellId:414684}}}}}]}},castSpell:{spellId:{spellId:414684}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}},{auraIsKnown:{auraId:{spellId:17061,rank:5}}},{cmp:{op:"OpGt",lhs:{timeToEnergyTick:{}},rhs:{const:{val:"1.02s"}}}}]}},castSpell:{spellId:{spellId:409828}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentMana:{}},rhs:{spellCurrentCost:{spellId:{spellId:768}}}}},{auraIsKnown:{auraId:{spellId:17061,rank:5}}},{cmp:{op:"OpGt",lhs:{timeToEnergyTick:{}},rhs:{const:{val:"1.02s"}}}},{not:{val:{dotIsActive:{spellId:{spellId:1824,rank:3}}}}},{not:{val:{runeIsEquipped:{runeId:{}}}}}]}},castSpell:{spellId:{spellId:1824,rank:3}}}}]},X={items:[{id:215166},{id:213344},{id:9647},{id:213307,enchant:849},{id:213313,enchant:866,rune:407977},{id:19590,enchant:856},{id:211423,enchant:856,rune:407995},{id:213322,rune:417141},{id:213332,rune:407988},{id:213341,enchant:849,rune:417046},{id:213284},{id:19512},{id:211449},{id:213348},{id:210741,enchant:34},{},{id:209576}]},Y={items:[{id:215166,enchant:7124,rune:417145},{id:13089},{id:220747,enchant:7328},{id:220615,enchant:849},{id:220779,enchant:928,rune:407977},{id:19590,enchant:856,rune:414719},{id:21319,enchant:1887,rune:407995},{id:213322,rune:417141},{id:220778,enchant:1508,rune:407988},{id:220780,enchant:1887,rune:417046},{id:19511},{id:12014,randomSuffix:692},{id:223195},{id:221307},{id:220596,enchant:34},{},{id:220606}]},Z=l("Phase 1",{items:[{id:211510},{id:209422},{id:209692},{id:213087,enchant:247},{id:211512,enchant:847,rune:407977},{id:209524,enchant:823},{id:211423,rune:407995},{id:209421},{id:10410,rune:407988},{id:211511,enchant:247},{id:20439},{id:6321},{id:211449},{id:4381},{id:209577,enchant:723},{},{id:209576}]}),$=l("Phase 2",X),ee=l("Phase 3",Y),ae={[v.Phase1]:[Z],[v.Phase2]:[$],[v.Phase3]:[ee],[v.Phase4]:[],[v.Phase5]:[]},te=ae[v.Phase3][0],se=n("Phase 1",_),le=n("Phase 2",J),ne=n("Phase 3",Q),re={[v.Phase1]:[se],[v.Phase2]:[le],[v.Phase3]:[ne],[v.Phase4]:[],[v.Phase5]:[]},ie={25:re[v.Phase1][0],40:re[v.Phase2][0],50:re[v.Phase3][0]},oe=f.create({maintainFaerieFire:!1,minCombosForRip:3,maxWaitTime:2,preroarDuration:26,precastTigersFury:!1,useShredTrick:!1});r("Simple Default",g.SpecFeralDruid,oe);const pe={name:"Phase 1",data:P.create({talentsString:"500005001--05"})},de={name:"Phase 2",data:P.create({talentsString:"-550002032320211-05"})},ce={name:"Phase 3",data:P.create({talentsString:"500005301-5500020323002-05"})},he={name:"Phase 3 LoTP",data:P.create({talentsString:"-5500020323202151-55"})},ue={[v.Phase1]:[pe],[v.Phase2]:[de],[v.Phase3]:[ce,he],[v.Phase4]:[],[v.Phase5]:[]},Ie=ue[v.Phase3][0],me=T.create({latencyMs:100,assumeBleedActive:!0}),Se=y.create({agilityElixir:A.ElixirOfTheMongoose,defaultPotion:O.MajorManaPotion,dragonBreathChili:!0,enchantedSigil:C.LivingDreamsSigil,food:k.FoodSagefishDelight,mainHandImbue:w.WildStrikes,miscConsumes:{catnip:!0},strengthBuff:b.ElixirOfGiants,zanzaBuff:M.AtalaiMojoOfWar}),ve=E.create({arcaneBrilliance:!0,aspectOfTheLion:!0,battleShout:F.TristateEffectImproved,divineSpirit:!0,giftOfTheWild:F.TristateEffectImproved,graceOfAirTotem:F.TristateEffectImproved,manaSpringTotem:F.TristateEffectImproved,strengthOfEarthTotem:F.TristateEffectImproved}),fe=R.create({fervorOfTheTempleExplorer:!0,saygesFortune:L.SaygesDamage,songflowerSerenade:!0}),ge=G.create({curseOfRecklessness:!0,faerieFire:!0,homunculi:70,sunderArmor:!0}),Pe={profession1:x.Enchanting,profession2:x.Leatherworking},Te=i(g.SpecFeralDruid,{cssClass:"feral-druid-sim-ui",cssScheme:"druid",knownIssues:[],warnings:[],epStats:[D.StatStrength,D.StatAgility,D.StatAttackPower,D.StatFeralAttackPower,D.StatMeleeHit,D.StatMeleeCrit,D.StatMeleeHaste,D.StatMana,D.StatIntellect,D.StatSpirit,D.StatMP5],epPseudoStats:[],epReferenceStat:D.StatAttackPower,displayStats:[D.StatHealth,D.StatStrength,D.StatAgility,D.StatAttackPower,D.StatFeralAttackPower,D.StatMeleeHit,D.StatMeleeCrit,D.StatMeleeHaste,D.StatMana,D.StatIntellect,D.StatSpirit,D.StatMP5],defaults:{gear:te.gear,epWeights:o.fromMap({[D.StatStrength]:2.38,[D.StatAgility]:2.35,[D.StatAttackPower]:1,[D.StatFeralAttackPower]:1,[D.StatMeleeHit]:24.46,[D.StatMeleeCrit]:16.67,[D.StatMeleeHaste]:10.9,[D.StatMana]:.04,[D.StatIntellect]:.67,[D.StatSpirit]:.08,[D.StatMP5]:.46},{}),consumes:Se,rotationType:K.TypeSimple,simpleRotation:oe,talents:Ie.data,specOptions:me,other:Pe,raidBuffs:ve,partyBuffs:B.create({}),individualBuffs:fe,debuffs:ge},playerIconInputs:[],rotationInputs:V,includeBuffDebuffInputs:[p,d,c,h],excludeBuffDebuffInputs:[w.ElementalSharpeningStone,w.DenseSharpeningStone,w.WildStrikes],otherInputs:{inputs:[u,I,m]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[...ue[v.Phase3],...ue[v.Phase2],...ue[v.Phase1]],rotations:[...re[v.Phase3],...re[v.Phase2],...re[v.Phase1]],gear:[...ae[v.Phase3],...ae[v.Phase2],...ae[v.Phase1]]},autoRotation:e=>ie[e.getLevel()].rotation.rotation,raidSimPresets:[{spec:g.SpecFeralDruid,tooltip:H[g.SpecFeralDruid],defaultName:"Cat",iconUrl:N(W.ClassDruid,3),talents:Ie.data,specOptions:me,consumes:Se,defaultFactionRaces:{[U.Unknown]:q.RaceUnknown,[U.Alliance]:q.RaceNightElf,[U.Horde]:q.RaceTauren},defaultGear:{[U.Unknown]:{},[U.Alliance]:{1:ae[v.Phase1][0].gear},[U.Horde]:{1:ae[v.Phase1][0].gear}}}]});class ye extends S{constructor(e,a){super(e,a,Te)}calcArpTarget(e){let a=1399;e.hasTrinket(45931)?a-=751:e.hasTrinket(40256)&&(a-=612);const t=e.getEquippedItem(j.ItemSlotMainHand);return null!=t&&null!=t.enchant&&3225==t.enchant.effectId&&(a-=120),a}calcCritCap(e){let a=0;return e.hasRelic(47668)&&(a+=200),e.hasRelic(50456)&&(a+=220),(e.hasTrinket(47131)||e.hasTrinket(47464))&&(a+=510),(e.hasTrinket(47115)||e.hasTrinket(47303))&&(a+=450),(e.hasTrinket(44253)||e.hasTrinket(42987))&&(a+=300),(new o).withStat(D.StatMeleeCrit,45.91*(77.8-1.1*a*1.06*1.02/83.33))}async updateGear(e){return this.player.setGear(z.nextEventID(),e),await this.sim.updateCharacterStats(z.nextEventID()),o.fromProto(this.player.getCurrentStats().finalStats)}detectArpStackConfiguration(e){const a=o.fromProto(this.player.getCurrentStats().finalStats).getStat(D.StatArmorPenetration);return e>1e3&&a>648&&a+20<e+11}}export{ye as F};
//# sourceMappingURL=sim-DJjE2Eav.chunk.js.map
