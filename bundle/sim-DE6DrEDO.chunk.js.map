{"version":3,"file":"sim-DE6DrEDO.chunk.js","sources":["../../../ui/tank_warlock/inputs.ts","../../../ui/tank_warlock/presets.ts","../../../ui/tank_warlock/sim.ts"],"sourcesContent":["import * as InputHelpers from '../core/components/input_helpers.js';\nimport { Player } from '../core/player.js';\nimport { ItemSlot, Spec } from '../core/proto/common.js';\nimport {\n\tWarlockOptions_Armor as Armor,\n\tWarlockOptions_Summon as Summon,\n\tWarlockOptions_WeaponImbue as WeaponImbue,\n\tWarlockRune} from '../core/proto/warlock.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecTankWarlock, Armor>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: Armor.NoArmor, tooltip: 'No Armor' },\n\t\t{ actionId: player => player.getMatchingSpellActionId([\n\t\t\t{ id: 706, minLevel: 20, maxLevel: 39 },\n\t\t\t{ id: 11733, minLevel: 40, maxLevel: 49 },\n\t\t\t{ id: 11734, minLevel: 50, maxLevel: 59 },\n\t\t\t{ id: 11735, minLevel: 60 },\n\t\t]), value: Armor.DemonArmor },\n\t],\n});\n\nexport const WeaponImbueInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecTankWarlock, WeaponImbue>({\n\tfieldName: 'weaponImbue',\n\tvalues: [\n\t\t{ value: WeaponImbue.NoWeaponImbue, tooltip: 'No Weapon Stone' },\n\t\t{ actionId: player => player.getMatchingItemActionId([\n\t\t\t{ id: 1254, minLevel: 28, maxLevel: 35 },\n\t\t\t{ id: 13699, minLevel: 36, maxLevel: 45 },\n\t\t\t{ id: 13700, minLevel: 46, maxLevel: 55 },\n\t\t\t{ id: 13701, minLevel: 56 },\n\t\t]), value: WeaponImbue.Firestone },\n\t\t{ actionId: player => player.getMatchingItemActionId([\n\t\t\t{ id: 5522, minLevel: 36, maxLevel: 47 },\n\t\t\t{ id: 13602, minLevel: 48, maxLevel: 59 },\n\t\t\t{ id: 13603, minLevel: 60 },\n\t\t]), value: WeaponImbue.Spellstone },\n\t],\n\tshowWhen: player => player.getEquippedItem(ItemSlot.ItemSlotOffHand) == null && player.getLevel() >= 28,\n\tchangeEmitter: (player: Player<Spec.SpecTankWarlock>) => player.changeEmitter,\n});\n\nexport const PetInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecTankWarlock, Summon>({\n\tfieldName: 'summon',\n\tvalues: [\n\t\t{ value: Summon.NoSummon, tooltip: 'No Pet' },\n\t\t{ actionId: () => ActionId.fromSpellId(688), value: Summon.Imp },\n\t\t{ actionId: () => ActionId.fromSpellId(697), value: Summon.Voidwalker },\n\t\t{ actionId: () => ActionId.fromSpellId(712), value: Summon.Succubus },\n\t\t{ actionId: () => ActionId.fromSpellId(691), value: Summon.Felhunter },\n\t\t{ actionId: () => ActionId.fromSpellId(427733), value: Summon.Felguard, showWhen: player => player.getEquippedItem(ItemSlot.ItemSlotWrist)?.rune?.id == WarlockRune.RuneBracerSummonFelguard },\n\t],\n\tchangeEmitter: (player: Player<Spec.SpecTankWarlock>) => player.changeEmitter,\n});\n\nexport const PetPoolManaInput = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecTankWarlock>({\n\tfieldName: 'petPoolMana',\n\tlabel: \"No Pet Management\",\n\tlabelTooltip: 'Should Pet keep trying to cast on every mana regen instead of waiting for mana',\n\tchangeEmitter: (player: Player<Spec.SpecTankWarlock>) => player.changeEmitter,\n});\n\nexport const WarlockRotationConfig = {\n\tinputs: [],\n};\n","import { Player } from 'ui/core/player.js';\n\nimport { Phase } from '../core/constants/other.js';\nimport * as PresetUtils from '../core/preset_utils.js';\nimport {\n\tAgilityElixir,\n\tConsumes,\n\tDebuffs,\n\tEnchantedSigil,\n\tFirePowerBuff,\n\tFood,\n\tIndividualBuffs,\n\tPotions,\n\tProfession,\n\tRaidBuffs,\n\tSaygesFortune,\n\tShadowPowerBuff,\n\tSpellPowerBuff,\n\tStrengthBuff,\n\tTristateEffect,\n\tWeaponImbue,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport {\n\tWarlockOptions as WarlockOptions,\n\tWarlockOptions_Armor as Armor,\n\tWarlockOptions_Summon as Summon,\n\tWarlockOptions_WeaponImbue as WarlockWeaponImbue,\n} from '../core/proto/warlock.js';\nimport Phase1AfflictionAPL from './apls/p1.affi.tank.apl.json';\nimport Phase1DestroTankAPL from './apls/p1.destro.tank.apl.json';\nimport Phase2DemonologyAPL from './apls/p2.demo.tank.apl.json';\nimport Phase2DestroTankAPL from './apls/p2.destro.tank.apl.json';\nimport Phase3TankAPL from './apls/p3.destro.tank.apl.json';\nimport AfflictionGearPhase1 from './gear_sets/p1.affi.tank.gear.json';\nimport DestructionGearPhase1 from './gear_sets/p1.destro.tank.gear.json';\nimport DemonologyGearPhase2 from './gear_sets/p2.demo.tank.gear.json';\nimport DestructionGearPhase2 from './gear_sets/p2.destro.tank.gear.json';\nimport TankGearPhase3 from './gear_sets/p3.destro.tank.gear.json';\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Gear Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const GearAfflictionTankPhase1 = PresetUtils.makePresetGear('P1 Affliction', AfflictionGearPhase1, { customCondition: player => player.getLevel() == 25 });\nexport const GearDestructionTankPhase1 = PresetUtils.makePresetGear('P1 Destruction', DestructionGearPhase1, { customCondition: player => player.getLevel() == 25 });\n\nexport const GearDemonologyTankPhase2 = PresetUtils.makePresetGear('P2 Demonology', DemonologyGearPhase2, { customCondition: player => player.getLevel() == 40 });\nexport const GearDestructionTankPhase2 = PresetUtils.makePresetGear('P2 Destruction', DestructionGearPhase2, { customCondition: player => player.getLevel() == 40 });\n\nexport const GearTankPhase3 = PresetUtils.makePresetGear('P3 Destruction', TankGearPhase3, { customCondition: player => player.getLevel() == 50 });\n\nexport const GearPresets = {\n\t[Phase.Phase1]: [GearAfflictionTankPhase1, GearDestructionTankPhase1],\n\t[Phase.Phase2]: [GearDemonologyTankPhase2, GearDestructionTankPhase2],\n\t[Phase.Phase3]: [GearTankPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Phase 3\nexport const DefaultGear = GearTankPhase3;\n\n///////////////////////////////////////////////////////////////////////////\n//                                 APL Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const APLAfflictionTankPhase1 = PresetUtils.makePresetAPLRotation('P1 Affliction', Phase1AfflictionAPL, { \n\tcustomCondition: player => player.getLevel() == 25 \n});\nexport const APLDestructionTankPhase1 = PresetUtils.makePresetAPLRotation('P1 Destruction', Phase1DestroTankAPL, { \n\tcustomCondition: player => player.getLevel() == 25 \n});\n\nexport const APLDemonologyTankPhase2 = PresetUtils.makePresetAPLRotation('P2 Demonology', Phase2DemonologyAPL, { \n\tcustomCondition: player => player.getLevel() == 40 \n});\nexport const APLDestructionTankPhase2 = PresetUtils.makePresetAPLRotation('P2 Destruction', Phase2DestroTankAPL, { \n\tcustomCondition: player => player.getLevel() == 40 \n});\n\nexport const APLTankPhase3 = PresetUtils.makePresetAPLRotation('P3 Destruction', Phase3TankAPL, { \n\tcustomCondition: player => player.getLevel() == 50 \n});\n\nexport const APLPresets = {\n\t[Phase.Phase1]: [APLAfflictionTankPhase1, APLDestructionTankPhase1],\n\t[Phase.Phase2]: [APLDemonologyTankPhase2, APLDestructionTankPhase2],\n\t[Phase.Phase3]: [APLTankPhase3],\n};\n\nexport const DefaultAPLs: Record<number, Record<number, PresetUtils.PresetRotation>> = {\n\t25: {\n\t\t0: APLPresets[Phase.Phase1][0],\n\t\t1: APLPresets[Phase.Phase1][1],\n\t},\n\t40: {\n\t\t0: APLPresets[Phase.Phase2][0],\n\t\t1: APLPresets[Phase.Phase2][1],\n\t},\n\t// TODO: Phase 3\n\t50: {\n\t\t0: APLPresets[Phase.Phase3][0],\n\t\t1: APLPresets[Phase.Phase3][0],\n\t},\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Talent Presets\n///////////////////////////////////////////////////////////////////////////\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\n\nexport const TalentsAfflictionTankPhase1 = {\n\tname: 'P1 Affliction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '050025001-003',\n\t}),\n\tenableWhen: (player: Player<any>) => player.getLevel() == 25,\n};\n\nexport const TalentsDestructionTankPhase1 = {\n\tname: 'P1 Destruction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-03-0550201',\n\t}),\n\tenableWhen: (player: Player<any>) => player.getLevel() == 25,\n};\n\nexport const TalentsDemonologyTankPhase2 = {\n\tname: 'P2 Demonology',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-2050033112501251',\n\t}),\n\tenableWhen: (player: Player<any>) => player.getLevel() == 40,\n};\n\nexport const TalentsDestructionTankPhase2 = {\n\tname: 'P2 Destruction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-035-05500050025001',\n\t}),\n\tenableWhen: (player: Player<any>) => player.getLevel() == 40,\n};\n\nexport const TalentsTankPhase3 = {\n\tname: 'P3 Destruction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05-03-505020500050515',\n\t}),\n\tenableWhen: (player: Player<any>) => player.getLevel() == 50,\n};\n\nexport const TalentPresets = {\n\t[Phase.Phase1]: [TalentsAfflictionTankPhase1, TalentsDestructionTankPhase1],\n\t[Phase.Phase2]: [TalentsDemonologyTankPhase2, TalentsDestructionTankPhase2],\n\t[Phase.Phase3]: [TalentsTankPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Phase 3\nexport const DefaultTalents = TalentsTankPhase3;\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Options\n///////////////////////////////////////////////////////////////////////////\n\nexport const DefaultOptions = WarlockOptions.create({\n\tarmor: Armor.DemonArmor,\n\tsummon: Summon.Imp,\n\tweaponImbue: WarlockWeaponImbue.NoWeaponImbue,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tagilityElixir: AgilityElixir.ElixirOfAgility,\n\tdefaultPotion: Potions.SuperiorManaPotion,\n\tenchantedSigil: EnchantedSigil.LivingDreamsSigil,\n\tfirePowerBuff: FirePowerBuff.ElixirOfFirepower,\n\tshadowPowerBuff: ShadowPowerBuff.ElixirOfShadowPower,\n\tfood: Food.FoodTenderWolfSteak,\n\tmainHandImbue: WeaponImbue.ShadowOil,\n\tspellPowerBuff: SpellPowerBuff.GreaterArcaneElixir,\n\tstrengthBuff: StrengthBuff.ElixirOfGiants,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\taspectOfTheLion: true,\n\tbattleShout: TristateEffect.TristateEffectImproved,\n\tbloodPact: TristateEffect.TristateEffectImproved,\n\tdevotionAura: TristateEffect.TristateEffectImproved,\n\tdivineSpirit: true,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tmoonkinAura: true,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tblessingOfSanctuary: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tsaygesFortune: SaygesFortune.SaygesDamage,\n\tfervorOfTheTempleExplorer: true,\n\tsongflowerSerenade: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tcurseOfElementsNew: TristateEffect.TristateEffectRegular,\n\tcurseOfShadowNew: TristateEffect.TristateEffectRegular,\n\tcurseOfRecklessness: true,\n\tdemoralizingShout: TristateEffect.TristateEffectImproved,\n\tfaerieFire: true,\n\thomunculi: 100,\n\timprovedScorch: true,\n\tshadowWeaving: true,\n});\n\nexport const OtherDefaults = {\n\tchannelClipDelay: 150,\n\tdistanceFromTarget: 5,\n\tprofession1: Profession.Enchanting,\n\tprofession2: Profession.Tailoring,\n};\n","import * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs';\nimport * as ConsumablesInputs from '../core/components/inputs/consumables.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport { Phase } from '../core/constants/other.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { Player } from '../core/player.js';\nimport {\n\tClass,\n\tFaction,\n\tItemSlot,\n\tPartyBuffs,\n\tRace,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\nimport { WarlockRune } from '../core/proto/warlock.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport * as WarlockInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecTankWarlock, {\n\tcssClass: 'tank-warlock-sim-ui',\n\tcssScheme: 'warlock',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellDamage,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatFirePower,\n\t\tStat.StatShadowPower,\n\t\tStat.StatSpellPenetration,\n\t\tStat.StatMP5,\n\n\t\t// Tank stats\n\t\tStat.StatStrength,\n\t\tStat.StatStamina,\n\t\tStat.StatAttackPower,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatAgility,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeHaste,\n\t],\n\t// Reference stat against which to calculate EP. DPS classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellDamage,\n\t\tStat.StatFirePower,\n\t\tStat.StatShadowPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatSpellPenetration,\n\t\tStat.StatMP5,\n\t\t// Tank stats\n\t\tStat.StatStamina,\n\t\tStat.StatAgility,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.18,\n\t\t\t[Stat.StatSpirit]: 0.54,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellDamage]: 1,\n\t\t\t[Stat.StatFirePower]: 1,\n\t\t\t[Stat.StatShadowPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.93,\n\t\t\t[Stat.StatSpellCrit]: 0.53,\n\t\t\t[Stat.StatSpellHaste]: 0.81,\n\t\t\t[Stat.StatStamina]: 0.01,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.DefaultTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\n\t\t// Default buffs and debuffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tWarlockInputs.PetInput,\n\t\tWarlockInputs.ArmorInput,\n\t\tWarlockInputs.WeaponImbueInput,\n\t],\n\trotationInputs: WarlockInputs.WarlockRotationConfig,\n\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.ResistanceBuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.BleedDebuff,\n\t\tBuffDebuffInputs.SpellWintersChillDebuff,\n\t\t...ConsumablesInputs.FROST_POWER_CONFIG,\n\t],\n\tpetConsumeInputs: [\n\t\tConsumablesInputs.PetScrollOfAgility,\n\t\tConsumablesInputs.PetScrollOfStrength,\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tWarlockInputs.PetPoolManaInput,\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tOtherInputs.ChannelClipDelay,\n\t\t],\n\t},\n\titemSwapConfig: {\n\t\titemSlots: [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand, ItemSlot.ItemSlotRanged],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\t...Presets.TalentPresets[Phase.Phase3],\n\t\t\t...Presets.TalentPresets[Phase.Phase2],\n\t\t\t...Presets.TalentPresets[Phase.Phase1],\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\t...Presets.APLPresets[Phase.Phase3],\n\t\t\t...Presets.APLPresets[Phase.Phase2],\n\t\t\t...Presets.APLPresets[Phase.Phase1],\n\t\t],\n\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\t...Presets.GearPresets[Phase.Phase3],\n\t\t\t...Presets.GearPresets[Phase.Phase2],\n\t\t\t...Presets.GearPresets[Phase.Phase1],\n\t\t],\n\t},\n\n\tautoRotation: player => {\n\t\tconst hasMasterChanneler = player.getEquippedItem(ItemSlot.ItemSlotChest)?.rune?.id == WarlockRune.RuneChestMasterChanneler\n\t\t// const hasLakeOfFire = player.getEquippedItem(ItemSlot.ItemSlotChest)?.rune?.id == WarlockRune.RuneChestLakeOfFire\n\n\t\t// MC vs LoF\n\t\tconst specNumber = hasMasterChanneler ? 0 : 1;\n\t\treturn Presets.DefaultAPLs[player.getLevel()][specNumber].rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecTankWarlock,\n\t\t\ttooltip: 'Demonology Tank',\n\t\t\tdefaultName: 'Demonology',\n\t\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 0),\n\n\t\t\ttalents: Presets.TalentsDemonologyTankPhase2.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearDemonologyTankPhase2.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearDemonologyTankPhase2.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecTankWarlock,\n\t\t\ttooltip: 'Destruction Tank',\n\t\t\tdefaultName: 'Destruction',\n\t\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 2),\n\n\t\t\ttalents: Presets.TalentsDestructionTankPhase2.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearDestructionTankPhase2.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearDestructionTankPhase2.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t},\n\t],\n});\n\nexport class TankWarlockSimUI extends IndividualSimUI<Spec.SpecTankWarlock> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecTankWarlock>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","Armor","NoArmor","tooltip","actionId","player","getMatchingSpellActionId","id","minLevel","maxLevel","DemonArmor","WeaponImbueInput","WeaponImbue","NoWeaponImbue","getMatchingItemActionId","Firestone","Spellstone","showWhen","getEquippedItem","ItemSlot","ItemSlotOffHand","getLevel","changeEmitter","PetInput","Summon","NoSummon","ActionId","fromSpellId","Imp","Voidwalker","Succubus","Felhunter","Felguard","ItemSlotWrist","rune","WarlockRune","RuneBracerSummonFelguard","PetPoolManaInput","InputHelpers.makeSpecOptionsBooleanInput","label","labelTooltip","GearAfflictionTankPhase1","PresetUtils.makePresetGear","customCondition","GearDestructionTankPhase1","DestructionGearPhase1","GearDemonologyTankPhase2","DemonologyGearPhase2","GearDestructionTankPhase2","DestructionGearPhase2","GearTankPhase3","TankGearPhase3","GearPresets","Phase","Phase1","Phase2","Phase3","Phase4","Phase5","DefaultGear","APLAfflictionTankPhase1","PresetUtils.makePresetAPLRotation","Phase1AfflictionAPL","APLDestructionTankPhase1","Phase1DestroTankAPL","APLDemonologyTankPhase2","Phase2DemonologyAPL","APLDestructionTankPhase2","Phase2DestroTankAPL","APLTankPhase3","Phase3TankAPL","APLPresets","DefaultAPLs","TalentsAfflictionTankPhase1","name","data","SavedTalents","create","talentsString","enableWhen","TalentsDestructionTankPhase1","TalentsDemonologyTankPhase2","TalentsDestructionTankPhase2","TalentsTankPhase3","TalentPresets","DefaultTalents","DefaultOptions","WarlockOptions","armor","summon","weaponImbue","WarlockWeaponImbue","DefaultConsumes","Consumes","agilityElixir","AgilityElixir","ElixirOfAgility","defaultPotion","Potions","SuperiorManaPotion","enchantedSigil","EnchantedSigil","LivingDreamsSigil","firePowerBuff","FirePowerBuff","ElixirOfFirepower","shadowPowerBuff","ShadowPowerBuff","ElixirOfShadowPower","food","Food","FoodTenderWolfSteak","mainHandImbue","ShadowOil","spellPowerBuff","SpellPowerBuff","GreaterArcaneElixir","strengthBuff","StrengthBuff","ElixirOfGiants","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","aspectOfTheLion","battleShout","TristateEffect","TristateEffectImproved","bloodPact","devotionAura","divineSpirit","giftOfTheWild","moonkinAura","powerWordFortitude","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfSanctuary","blessingOfWisdom","saygesFortune","SaygesFortune","SaygesDamage","fervorOfTheTempleExplorer","songflowerSerenade","DefaultDebuffs","Debuffs","curseOfElementsNew","TristateEffectRegular","curseOfShadowNew","curseOfRecklessness","demoralizingShout","faerieFire","homunculi","improvedScorch","shadowWeaving","OtherDefaults","channelClipDelay","distanceFromTarget","profession1","Profession","Enchanting","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecTankWarlock","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellDamage","StatSpellHit","StatSpellCrit","StatSpellHaste","StatFirePower","StatShadowPower","StatSpellPenetration","StatMP5","StatStrength","StatStamina","StatAttackPower","StatArmorPenetration","StatAgility","StatArmor","StatBonusArmor","StatMeleeCrit","StatMeleeHit","StatMeleeHaste","epReferenceStat","displayStats","StatHealth","StatMana","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.DefaultTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","WarlockInputs.PetInput","WarlockInputs.ArmorInput","WarlockInputs.WeaponImbueInput","rotationInputs","inputs","includeBuffDebuffInputs","BuffDebuffInputs.ResistanceBuff","excludeBuffDebuffInputs","BuffDebuffInputs.BleedDebuff","BuffDebuffInputs.SpellWintersChillDebuff","ConsumablesInputs.FROST_POWER_CONFIG","petConsumeInputs","ConsumablesInputs.PetScrollOfAgility","ConsumablesInputs.PetScrollOfStrength","otherInputs","WarlockInputs.PetPoolManaInput","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","OtherInputs.ChannelClipDelay","itemSwapConfig","itemSlots","ItemSlotMainHand","ItemSlotRanged","encounterPicker","showExecuteProportion","presets","Presets.TalentPresets","rotations","Presets.APLPresets","Presets.GearPresets","autoRotation","specNumber","ItemSlotChest","RuneChestMasterChanneler","Presets.DefaultAPLs","rotation","raidSimPresets","spec","defaultName","iconUrl","getSpecIcon","Class","ClassWarlock","Presets.TalentsDemonologyTankPhase2","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceOrc","defaultGear","Presets.GearDemonologyTankPhase2","otherDefaults","Presets.TalentsDestructionTankPhase2","Presets.GearDestructionTankPhase2","TankWarlockSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}