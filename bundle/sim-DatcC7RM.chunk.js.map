{"version":3,"file":"sim-DatcC7RM.chunk.js","sources":["../../../ui/tank_rogue/presets.ts","../../../ui/tank_rogue/sim.ts"],"sourcesContent":["import { Phase } from '../core/constants/other.js';\nimport * as PresetUtils from '../core/preset_utils.js';\nimport { AgilityElixir, Consumes, Debuffs, IndividualBuffs, Profession, RaidBuffs, StrengthBuff, TristateEffect, WeaponImbue } from '../core/proto/common.js';\nimport { RogueOptions } from '../core/proto/rogue.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport MutilateApl from './apls/mutilate.apl.json';\nimport MutilateIEAApl from './apls/mutilate_IEA.apl.json';\nimport BlankGear from './gear_sets/blank.gear.json';\nimport P1CombatGear from './gear_sets/p1_combat.gear.json';\nimport P1DaggersGear from './gear_sets/p1_daggers.gear.json';\nimport P2DaggersGear from './gear_sets/p2_daggers.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Gear Presets\n///////////////////////////////////////////////////////////////////////////\n\n// TODO: Add gear sets\nexport const GearBlank = PresetUtils.makePresetGear('Blank', BlankGear);\nexport const GearDaggersP1 = PresetUtils.makePresetGear('P1 Daggers', P1DaggersGear, { customCondition: player => player.getLevel() == 25 });\nexport const GearDaggersP2 = PresetUtils.makePresetGear('P2 Daggers', P2DaggersGear, { customCondition: player => player.getLevel() == 40 });\nexport const GearCombatP1 = PresetUtils.makePresetGear('P1 Combat', P1CombatGear, { customCondition: player => player.getLevel() == 25 });\n\nexport const GearPresets = {\n\t[Phase.Phase1]: [GearDaggersP1, GearCombatP1],\n\t[Phase.Phase2]: [GearDaggersP2],\n\t[Phase.Phase3]: [],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Phase 3\nexport const DefaultGear = GearPresets[Phase.Phase2][0];\n\n///////////////////////////////////////////////////////////////////////////\n//                                 APL Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const ROTATION_PRESET_MUTILATE = PresetUtils.makePresetAPLRotation('Mutilate', MutilateApl, {});\nexport const ROTATION_PRESET_MUTILATE_IEA = PresetUtils.makePresetAPLRotation('Mutilate IEA', MutilateIEAApl, {});\n\nexport const APLPresets = {\n\t[Phase.Phase1]: [ROTATION_PRESET_MUTILATE],\n\t[Phase.Phase2]: [ROTATION_PRESET_MUTILATE, ROTATION_PRESET_MUTILATE_IEA],\n\t[Phase.Phase3]: [],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\nexport const DefaultAPLs: Record<number, Record<number, PresetUtils.PresetRotation>> = {\n\t25: {\n\t\t0: APLPresets[Phase.Phase1][0],\n\t\t1: APLPresets[Phase.Phase1][0],\n\t\t2: APLPresets[Phase.Phase1][0],\n\t},\n\t40: {\n\t\t0: APLPresets[Phase.Phase2][0],\n\t\t1: APLPresets[Phase.Phase2][0],\n\t\t2: APLPresets[Phase.Phase2][0],\n\t},\n\t// TODO: Phase 3\n\t50: {\n\t\t0: APLPresets[Phase.Phase2][0],\n\t\t1: APLPresets[Phase.Phase2][0],\n\t\t2: APLPresets[Phase.Phase2][0],\n\t},\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Talent Presets\n///////////////////////////////////////////////////////////////////////////\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\n\n// TODO: Add tank talents\n\nexport const CombatDagger25Talents = PresetUtils.makePresetTalents('P1 Combat Dagger', SavedTalents.create({ talentsString: '-023305002001' }), {\n\tcustomCondition: player => player.getLevel() == 25,\n});\n\nexport const ColdBloodMutilate40Talents = PresetUtils.makePresetTalents('P2 CB Mutilate', SavedTalents.create({ talentsString: '005303103551--05' }), {\n\tcustomCondition: player => player.getLevel() == 40,\n});\n\nexport const IEAMutilate40Talents = PresetUtils.makePresetTalents('P2 CB/IEA Mutilate', SavedTalents.create({ talentsString: '005303121551--05' }), {\n\tcustomCondition: player => player.getLevel() == 40,\n});\n\nexport const CombatMutilate40Talents = PresetUtils.makePresetTalents('P2 AR/BF Mutilate', SavedTalents.create({ talentsString: '-0053052020550100201' }), {\n\tcustomCondition: player => player.getLevel() == 40,\n});\n\nexport const TalentPresets = {\n\t[Phase.Phase1]: [CombatDagger25Talents],\n\t[Phase.Phase2]: [ColdBloodMutilate40Talents, IEAMutilate40Talents, CombatMutilate40Talents],\n\t[Phase.Phase3]: [],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Phase 3\nexport const DefaultTalentsAssassin = TalentPresets[Phase.Phase2][0];\nexport const DefaultTalentsCombat = TalentPresets[Phase.Phase2][2];\nexport const DefaultTalentsSubtlety = TalentPresets[Phase.Phase1][0];\n\nexport const DefaultTalents = DefaultTalentsCombat;\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Options\n///////////////////////////////////////////////////////////////////////////\n\nexport const DefaultOptions = RogueOptions.create({\n\thonorAmongThievesCritRate: 200,\n});\n\n///////////////////////////////////////////////////////////////////////////\n//                         Consumes/Buffs/Debuffs\n///////////////////////////////////////////////////////////////////////////\n\nexport const DefaultConsumes = Consumes.create({\n\tagilityElixir: AgilityElixir.ElixirOfAgility,\n\tdragonBreathChili: false,\n\tstrengthBuff: StrengthBuff.ElixirOfOgresStrength,\n\tmainHandImbue: WeaponImbue.WildStrikes,\n\toffHandImbue: WeaponImbue.ShadowOil,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\taspectOfTheLion: true,\n\tbattleShout: TristateEffect.TristateEffectRegular,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfMight: TristateEffect.TristateEffectRegular,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tcurseOfRecklessness: true,\n\tdreamstate: true,\n\tfaerieFire: true,\n\tsunderArmor: true,\n\tmangle: true,\n});\n\nexport const OtherDefaults = {\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Leatherworking,\n};\n","import * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport { Phase } from '../core/constants/other';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui';\nimport { Player } from '../core/player';\nimport { Class, Faction, PartyBuffs, PseudoStat, Race, Spec, Stat } from '../core/proto/common';\nimport { Stats } from '../core/proto_utils/stats';\nimport { getSpecIcon } from '../core/proto_utils/utils';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecTankRogue, {\n\tcssClass: 'rogue-sim-ui',\n\tcssScheme: 'rogue',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: ['Rotations are not fully optimized, especially for non-standard setups.'],\n\twarnings: [],\n\tepStats: [\n\t\tStat.StatAgility,\n\t\tStat.StatStrength,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatSpellDamage,\n\t\tStat.StatSpellPower,\n\t\tStat.StatNaturePower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\n\t\t// Tank stats\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatStamina,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps, PseudoStat.PseudoStatOffHandDps],\n\t// Reference stat against which to caluclate EP.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats seciont, at the bottom of the lef-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatAgility,\n\t\tStat.StatStrength,\n\t\tStat.StatAttackPower,\n\t\tStat.StatSpellPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatMeleeHaste,\n\n\t\t// Tank stats\n\t\tStat.StatStamina,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatAgility]: 1.69,\n\t\t\t\t[Stat.StatStrength]: 1.1,\n\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t[Stat.StatSpellDamage]: 0.68,\n\t\t\t\t[Stat.StatNaturePower]: 0.68,\n\t\t\t\t[Stat.StatSpellCrit]: 2.0,\n\t\t\t\t[Stat.StatSpellHit]: 5.54,\n\t\t\t\t[Stat.StatMeleeHit]: 14.2,\n\t\t\t\t[Stat.StatMeleeCrit]: 8.64,\n\t\t\t\t[Stat.StatMeleeHaste]: 6.51,\n\t\t\t\t[Stat.StatStamina]: 0.3,\n\t\t\t\t[Stat.StatArmor]: 0.01,\n\t\t\t\t[Stat.StatBonusArmor]: 0.01,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 2.94,\n\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.45,\n\t\t\t},\n\t\t),\n\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.CombatMutilate40Talents.data,\n\t\tspecOptions: Presets.DefaultOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\n\tplayerInputs: {\n\t\tinputs: [],\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.SpellCritBuff,\n\t\tBuffDebuffInputs.SpellShadowWeavingDebuff,\n\t\tBuffDebuffInputs.NatureSpellDamageDebuff,\n\t\tBuffDebuffInputs.MekkatorqueFistDebuff,\n\t\tBuffDebuffInputs.SpellScorchDebuff,\n\t\tBuffDebuffInputs.PowerInfusion,\n\t],\n\texcludeBuffDebuffInputs: [],\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [...Presets.TalentPresets[Phase.Phase2], ...Presets.TalentPresets[Phase.Phase1]],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [...Presets.APLPresets[Phase.Phase2], ...Presets.APLPresets[Phase.Phase1]],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [...Presets.GearPresets[Phase.Phase2], ...Presets.GearPresets[Phase.Phase1]],\n\t},\n\n\tautoRotation: player => {\n\t\treturn Presets.DefaultAPLs[player.getLevel()][player.getTalentTree()].rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecTankRogue,\n\t\t\ttooltip: 'Combat Tank',\n\t\t\tdefaultName: 'Combat',\n\t\t\ticonUrl: getSpecIcon(Class.ClassRogue, 0),\n\n\t\t\ttalents: Presets.DefaultTalentsCombat.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class TankRogueSimUI extends IndividualSimUI<Spec.SpecTankRogue> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecTankRogue>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PresetUtils.makePresetGear","GearDaggersP1","P1DaggersGear","customCondition","player","getLevel","GearDaggersP2","P2DaggersGear","GearCombatP1","P1CombatGear","GearPresets","Phase","Phase1","Phase2","Phase3","Phase4","Phase5","DefaultGear","ROTATION_PRESET_MUTILATE","PresetUtils.makePresetAPLRotation","MutilateApl","ROTATION_PRESET_MUTILATE_IEA","MutilateIEAApl","APLPresets","DefaultAPLs","CombatDagger25Talents","PresetUtils.makePresetTalents","SavedTalents","create","talentsString","ColdBloodMutilate40Talents","IEAMutilate40Talents","CombatMutilate40Talents","TalentPresets","DefaultTalentsCombat","DefaultOptions","RogueOptions","honorAmongThievesCritRate","DefaultConsumes","Consumes","agilityElixir","AgilityElixir","ElixirOfAgility","dragonBreathChili","strengthBuff","StrengthBuff","ElixirOfOgresStrength","mainHandImbue","WeaponImbue","WildStrikes","offHandImbue","ShadowOil","DefaultRaidBuffs","RaidBuffs","aspectOfTheLion","battleShout","TristateEffect","TristateEffectRegular","giftOfTheWild","TristateEffectImproved","strengthOfEarthTotem","DefaultIndividualBuffs","IndividualBuffs","blessingOfMight","DefaultDebuffs","Debuffs","curseOfRecklessness","dreamstate","faerieFire","sunderArmor","mangle","OtherDefaults","profession1","Profession","Engineering","profession2","Leatherworking","SPEC_CONFIG","registerSpecConfig","Spec","SpecTankRogue","cssClass","cssScheme","knownIssues","warnings","epStats","Stat","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatSpellDamage","StatSpellPower","StatNaturePower","StatSpellHit","StatSpellCrit","StatArmor","StatBonusArmor","StatStamina","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatDodge","StatParry","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.CombatMutilate40Talents","data","specOptions","Presets.DefaultOptions","other","Presets.OtherDefaults","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerInputs","inputs","playerIconInputs","includeBuffDebuffInputs","BuffDebuffInputs.SpellCritBuff","BuffDebuffInputs.SpellShadowWeavingDebuff","BuffDebuffInputs.NatureSpellDamageDebuff","BuffDebuffInputs.MekkatorqueFistDebuff","BuffDebuffInputs.SpellScorchDebuff","BuffDebuffInputs.PowerInfusion","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","encounterPicker","showExecuteProportion","presets","Presets.TalentPresets","rotations","Presets.APLPresets","Presets.GearPresets","autoRotation","Presets.DefaultAPLs","getTalentTree","rotation","raidSimPresets","spec","tooltip","defaultName","iconUrl","getSpecIcon","Class","ClassRogue","Presets.DefaultTalentsCombat","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceOrc","defaultGear","TankRogueSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}