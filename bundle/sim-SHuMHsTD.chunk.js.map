{"version":3,"file":"sim-SHuMHsTD.chunk.js","sources":["../../../ui/balance_druid/presets.ts","../../../ui/balance_druid/sim.ts"],"sourcesContent":["import { Phase } from '../core/constants/other.js';\nimport * as PresetUtils from '../core/preset_utils.js';\nimport {\n\tConjured,\n\tConsumes,\n\tDebuffs,\n\tEnchantedSigil,\n\tFlask,\n\tFood,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tPotions,\n\tProfession,\n\tRaidBuffs,\n\tSaygesFortune,\n\tSpellPowerBuff,\n\tTristateEffect,\n\tUnitReference,\n\tWeaponImbue,\n\tZanzaBuff,\n} from '../core/proto/common.js';\nimport { BalanceDruid_Options as BalanceDruidOptions } from '../core/proto/druid.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport Phase1APL from './apls/phase_1.apl.json';\nimport Phase2APL from './apls/phase_2.apl.json';\nimport Phase3APL from './apls/phase_3.apl.json';\nimport Phase1Gear from './gear_sets/phase_1.gear.json';\nimport Phase2Gear from './gear_sets/phase_2.gear.json';\nimport Phase3Gear from './gear_sets/phase_3.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Gear Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const GearPhase1 = PresetUtils.makePresetGear('Phase 1', Phase1Gear);\nexport const GearPhase2 = PresetUtils.makePresetGear('Phase 2', Phase2Gear);\nexport const GearPhase3 = PresetUtils.makePresetGear('Phase 3', Phase3Gear);\n\nexport const GearPresets = {\n\t[Phase.Phase1]: [GearPhase1],\n\t[Phase.Phase2]: [GearPhase2],\n\t[Phase.Phase3]: [GearPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Add Phase 2 preset and pull from map\nexport const DefaultGear = GearPresets[Phase.Phase3][0];\n\n///////////////////////////////////////////////////////////////////////////\n//                                 APL Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const APLPhase1 = PresetUtils.makePresetAPLRotation('Phase 1', Phase1APL);\nexport const APLPhase2 = PresetUtils.makePresetAPLRotation('Phase 2', Phase2APL);\nexport const APLPhase3 = PresetUtils.makePresetAPLRotation('Phase 3', Phase3APL);\n\nexport const APLPresets = {\n\t[Phase.Phase1]: [APLPhase1],\n\t[Phase.Phase2]: [APLPhase2],\n\t[Phase.Phase3]: [APLPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Add Phase 2 preset and pull from map\nexport const DefaultAPLs: Record<number, PresetUtils.PresetRotation> = {\n\t25: APLPresets[Phase.Phase1][0],\n\t40: APLPresets[Phase.Phase2][0],\n\t50: APLPresets[Phase.Phase3][0],\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Talent Presets\n///////////////////////////////////////////////////////////////////////////\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\n\nexport const TalentsPhase1 = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '50005003021',\n\t}),\n};\n\nexport const TalentsPhase2 = {\n\tname: 'Phase 2',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5000500302541051',\n\t}),\n};\nexport const TalentsPhase3 = {\n\tname: 'Phase 3',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5000550012551351--3',\n\t}),\n};\n\nexport const TalentPresets = {\n\t[Phase.Phase1]: [TalentsPhase1],\n\t[Phase.Phase2]: [TalentsPhase2],\n\t[Phase.Phase3]: [TalentsPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Add Phase 2 preset and pull from map\nexport const DefaultTalents = TalentPresets[Phase.Phase3][0];\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Options\n///////////////////////////////////////////////////////////////////////////\n\nexport const DefaultOptions = BalanceDruidOptions.create({\n\tinnervateTarget: UnitReference.create(),\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultConjured: Conjured.ConjuredDruidCatnip,\n\tdefaultPotion: Potions.MajorManaPotion,\n\tenchantedSigil: EnchantedSigil.LivingDreamsSigil,\n\tflask: Flask.FlaskOfRestlessDreams,\n\tfood: Food.FoodRunnTumTuberSurprise,\n\tmainHandImbue: WeaponImbue.LesserWizardOil,\n\tmildlyIrradiatedRejuvPot: true,\n\tspellPowerBuff: SpellPowerBuff.ArcaneElixir,\n\tzanzaBuff: ZanzaBuff.AtalaiMojoOfForbiddenMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\taspectOfTheLion: true,\n\tdivineSpirit: true,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\tmoonkinAura: true,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tfervorOfTheTempleExplorer: true,\n\tsaygesFortune: SaygesFortune.SaygesDamage,\n\tsongflowerSerenade: true,\n});\n\nexport const DefaultPartyBuffs = PartyBuffs.create({});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tfaerieFire: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 5,\n\tprofession1: Profession.Enchanting,\n\tprofession2: Profession.Alchemy,\n};\n","import * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs';\nimport * as ConsumablesInputs from '../core/components/inputs/consumables.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport { Phase } from '../core/constants/other.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { Player } from '../core/player.js';\nimport { Class, Faction, Race, Spec, Stat } from '../core/proto/common.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\n// import * as DruidInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecBalanceDruid, {\n\tcssClass: 'balance-druid-sim-ui',\n\tcssScheme: 'druid',\n\t// List any known bugs / issues here, and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellDamage,\n\t\tStat.StatArcanePower,\n\t\tStat.StatNaturePower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellDamage,\n\t\tStat.StatArcanePower,\n\t\tStat.StatNaturePower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.16,\n\t\t\t[Stat.StatSpirit]: 0.0,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellDamage]: 1,\n\t\t\t[Stat.StatArcanePower]: 0.62,\n\t\t\t[Stat.StatNaturePower]: 0.38,\n\t\t\t[Stat.StatSpellHit]: 11.75,\n\t\t\t[Stat.StatSpellCrit]: 7.5,\n\t\t\t[Stat.StatSpellHaste]: 0.8,\n\t\t\t[Stat.StatMP5]: 0.0,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.DefaultTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: Presets.DefaultPartyBuffs,\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [],\n\texcludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.SpellISBDebuff,\n\t\tBuffDebuffInputs.SpellScorchDebuff,\n\t\tBuffDebuffInputs.SpellWintersChillDebuff,\n\t\t...ConsumablesInputs.AGILITY_CONSUMES_CONFIG,\n\t\t...ConsumablesInputs.STRENGTH_CONSUMES_CONFIG,\n\t\t...ConsumablesInputs.FIRE_POWER_CONFIG,\n\t\t...ConsumablesInputs.FROST_POWER_CONFIG,\n\t\t...ConsumablesInputs.SHADOW_POWER_CONFIG,\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.ReactionTime, OtherInputs.DistanceFromTarget],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [...Presets.TalentPresets[Phase.Phase3], ...Presets.TalentPresets[Phase.Phase2], ...Presets.TalentPresets[Phase.Phase1]],\n\t\trotations: [...Presets.APLPresets[Phase.Phase3], ...Presets.APLPresets[Phase.Phase2], ...Presets.APLPresets[Phase.Phase1]],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [...Presets.GearPresets[Phase.Phase3], ...Presets.GearPresets[Phase.Phase2], ...Presets.GearPresets[Phase.Phase1]],\n\t},\n\n\tautoRotation: player => {\n\t\treturn Presets.DefaultAPLs[player.getLevel()].rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecBalanceDruid,\n\t\t\ttooltip: specNames[Spec.SpecBalanceDruid],\n\t\t\tdefaultName: 'Balance',\n\t\t\ticonUrl: getSpecIcon(Class.ClassDruid, 0),\n\n\t\t\ttalents: Presets.DefaultTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\n// noinspection TypeScriptValidateTypes\nexport class BalanceDruidSimUI extends IndividualSimUI<Spec.SpecBalanceDruid> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecBalanceDruid>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["GearPhase1","PresetUtils.makePresetGear","GearPhase2","Phase2Gear","GearPhase3","Phase3Gear","GearPresets","Phase","Phase1","Phase2","Phase3","Phase4","Phase5","DefaultGear","APLPhase1","PresetUtils.makePresetAPLRotation","Phase1APL","APLPhase2","Phase2APL","APLPhase3","Phase3APL","APLPresets","DefaultAPLs","TalentsPhase1","name","data","SavedTalents","create","talentsString","TalentsPhase2","TalentsPhase3","TalentPresets","DefaultTalents","DefaultOptions","BalanceDruidOptions","innervateTarget","UnitReference","DefaultConsumes","Consumes","defaultConjured","Conjured","ConjuredDruidCatnip","defaultPotion","Potions","MajorManaPotion","enchantedSigil","EnchantedSigil","LivingDreamsSigil","flask","Flask","FlaskOfRestlessDreams","food","Food","FoodRunnTumTuberSurprise","mainHandImbue","WeaponImbue","LesserWizardOil","mildlyIrradiatedRejuvPot","spellPowerBuff","SpellPowerBuff","ArcaneElixir","zanzaBuff","ZanzaBuff","AtalaiMojoOfForbiddenMagic","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","aspectOfTheLion","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","manaSpringTotem","TristateEffectRegular","moonkinAura","powerWordFortitude","DefaultIndividualBuffs","IndividualBuffs","fervorOfTheTempleExplorer","saygesFortune","SaygesFortune","SaygesDamage","songflowerSerenade","DefaultPartyBuffs","PartyBuffs","DefaultDebuffs","Debuffs","faerieFire","OtherDefaults","distanceFromTarget","profession1","Profession","Enchanting","profession2","Alchemy","SPEC_CONFIG","registerSpecConfig","Spec","SpecBalanceDruid","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellDamage","StatArcanePower","StatNaturePower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.DefaultTalents","specOptions","Presets.DefaultOptions","other","Presets.OtherDefaults","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","Presets.DefaultPartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","BuffDebuffInputs.SpellISBDebuff","BuffDebuffInputs.SpellScorchDebuff","BuffDebuffInputs.SpellWintersChillDebuff","ConsumablesInputs.AGILITY_CONSUMES_CONFIG","ConsumablesInputs.STRENGTH_CONSUMES_CONFIG","ConsumablesInputs.FIRE_POWER_CONFIG","ConsumablesInputs.FROST_POWER_CONFIG","ConsumablesInputs.SHADOW_POWER_CONFIG","otherInputs","inputs","OtherInputs.ReactionTime","OtherInputs.DistanceFromTarget","encounterPicker","showExecuteProportion","presets","Presets.TalentPresets","rotations","Presets.APLPresets","Presets.GearPresets","autoRotation","player","Presets.DefaultAPLs","getLevel","rotation","raidSimPresets","spec","tooltip","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassDruid","otherDefaults","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceNightElf","Horde","RaceTauren","defaultGear","BalanceDruidSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}