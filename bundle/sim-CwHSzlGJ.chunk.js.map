{"version":3,"file":"sim-CwHSzlGJ.chunk.js","sources":["../../../ui/elemental_shaman/presets.ts","../../../ui/elemental_shaman/sim.ts"],"sourcesContent":["import { Phase } from '../core/constants/other.js';\nimport * as PresetUtils from '../core/preset_utils.js';\nimport {\n\tConsumes,\n\tDebuffs,\n\tEnchantedSigil,\n\tFirePowerBuff,\n\tFood,\n\tIndividualBuffs,\n\tPotions,\n\tProfession,\n\tRaidBuffs,\n\tSaygesFortune,\n\tSpellPowerBuff,\n\tStrengthBuff,\n\tTristateEffect,\n\tWeaponImbue,\n\tZanzaBuff,\n} from '../core/proto/common.js';\nimport { ElementalShaman_Options as ElementalShamanOptions } from '../core/proto/shaman.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport Phase1APL from './apls/phase_1.apl.json';\nimport Phase2APL from './apls/phase_2.apl.json';\nimport Phase3APL from './apls/phase_3.apl.json';\nimport Phase1Gear from './gear_sets/phase_1.gear.json';\nimport Phase2Gear from './gear_sets/phase_2.gear.json';\nimport Phase3Gear from './gear_sets/phase_3.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Gear Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const GearPhase1 = PresetUtils.makePresetGear('Phase 1', Phase1Gear);\nexport const GearPhase2 = PresetUtils.makePresetGear('Phase 2', Phase2Gear);\nexport const GearPhase3 = PresetUtils.makePresetGear('Phase 3', Phase3Gear);\n\nexport const GearPresets = {\n\t[Phase.Phase1]: [GearPhase1],\n\t[Phase.Phase2]: [GearPhase2],\n\t[Phase.Phase3]: [GearPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\n// TODO: Phase 3\nexport const DefaultGear = GearPresets[Phase.Phase3][0];\n\n///////////////////////////////////////////////////////////////////////////\n//                                 APL Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const APLPhase1 = PresetUtils.makePresetAPLRotation('Phase 1', Phase1APL);\nexport const APLPhase2 = PresetUtils.makePresetAPLRotation('Phase 2', Phase2APL);\nexport const APLPhase3 = PresetUtils.makePresetAPLRotation('Phase 3', Phase3APL);\n\nexport const APLPresets = {\n\t[Phase.Phase1]: [APLPhase1],\n\t[Phase.Phase2]: [APLPhase2],\n\t[Phase.Phase3]: [APLPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\nexport const DefaultAPLs: Record<number, PresetUtils.PresetRotation> = {\n\t25: APLPresets[Phase.Phase1][0],\n\t40: APLPresets[Phase.Phase2][0],\n\t50: APLPresets[Phase.Phase3][0],\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Talent Presets\n///////////////////////////////////////////////////////////////////////////\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\n\nexport const TalentsPhase1 = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '25003105',\n\t}),\n};\n\nexport const TalentsPhase2 = {\n\tname: 'Phase 2',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '550031550000151',\n\t}),\n};\n\nexport const TalentsPhase3 = {\n\tname: 'Phase 3',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '550031550000151-500203',\n\t}),\n};\n\nexport const TalentPresets = {\n\t[Phase.Phase1]: [TalentsPhase1],\n\t[Phase.Phase2]: [TalentsPhase2],\n\t[Phase.Phase3]: [TalentsPhase3],\n\t[Phase.Phase4]: [],\n\t[Phase.Phase5]: [],\n};\n\nexport const DefaultTalents = TalentPresets[Phase.Phase3][0];\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Options\n///////////////////////////////////////////////////////////////////////////\n\nexport const DefaultOptions = ElementalShamanOptions.create({});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.GreaterManaPotion,\n\tenchantedSigil: EnchantedSigil.LivingDreamsSigil,\n\tfirePowerBuff: FirePowerBuff.ElixirOfFirepower,\n\tfood: Food.FoodNightfinSoup,\n\tmainHandImbue: WeaponImbue.LesserWizardOil,\n\toffHandImbue: WeaponImbue.LesserWizardOil,\n\tspellPowerBuff: SpellPowerBuff.ArcaneElixir,\n\tstrengthBuff: StrengthBuff.ElixirOfGiants,\n\tzanzaBuff: ZanzaBuff.AtalaiMojoOfForbiddenMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\taspectOfTheLion: true,\n\tdivineSpirit: true,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tmanaSpringTotem: TristateEffect.TristateEffectImproved,\n\tmoonkinAura: true,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tfervorOfTheTempleExplorer: true,\n\tsaygesFortune: SaygesFortune.SaygesDamage,\n\tsongflowerSerenade: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tcurseOfElementsNew: TristateEffect.TristateEffectRegular,\n\timprovedScorch: true,\n\tserpentsStrikerFistDebuff: true,\n\tstormstrike: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 5,\n\tprofession1: Profession.Enchanting,\n\tprofession2: Profession.Leatherworking,\n};\n","import * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs';\nimport * as OtherInputs from '../core/components/other_inputs';\nimport * as Mechanics from '../core/constants/mechanics';\nimport { Phase } from '../core/constants/other';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui';\nimport { Player } from '../core/player';\nimport { Class, Faction, ItemSlot, PartyBuffs, Race, Spec, Stat } from '../core/proto/common';\nimport { Stats } from '../core/proto_utils/stats';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecElementalShaman, {\n\tcssClass: 'elemental-shaman-sim-ui',\n\tcssScheme: 'shaman',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\twarnings: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellDamage,\n\t\tStat.StatFirePower,\n\t\tStat.StatNaturePower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t\tStat.StatAttackPower,\n\t\tStat.StatStrength,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellDamage,\n\t\tStat.StatNaturePower,\n\t\tStat.StatFirePower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t\tStat.StatAttackPower,\n\t\tStat.StatStrength,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecElementalShaman>) => {\n\t\tlet stats = new Stats();\n\t\tstats = stats.addStat(Stat.StatSpellCrit, player.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\n\tdefaults: {\n\t\trace: Race.RaceTroll,\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.65,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellDamage]: 1,\n\t\t\t[Stat.StatFirePower]: 0.3,\n\t\t\t[Stat.StatNaturePower]: 0.7,\n\t\t\t[Stat.StatSpellHit]: 16.61,\n\t\t\t[Stat.StatSpellCrit]: 7.91,\n\t\t\t[Stat.StatSpellHaste]: 7.28,\n\t\t\t[Stat.StatMP5]: 0.02,\n\t\t\t[Stat.StatAttackPower]: 0.31,\n\t\t\t[Stat.StatStrength]: 0.68,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.DefaultTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [],\n\texcludeBuffDebuffInputs: [BuffDebuffInputs.BleedDebuff],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.DistanceFromTarget],\n\t},\n\titemSwapConfig: {\n\t\titemSlots: [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand],\n\t\tnote: 'Swap items are given the highest available rank of Rockbiter Weapon',\n\t},\n\tcustomSections: [\n\t\t// TotemsSection,\n\t],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [...Presets.TalentPresets[Phase.Phase3], ...Presets.TalentPresets[Phase.Phase2], ...Presets.TalentPresets[Phase.Phase1]],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [...Presets.APLPresets[Phase.Phase3], ...Presets.APLPresets[Phase.Phase2], ...Presets.APLPresets[Phase.Phase1]],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [...Presets.GearPresets[Phase.Phase3], ...Presets.GearPresets[Phase.Phase2], ...Presets.GearPresets[Phase.Phase1]],\n\t},\n\n\tautoRotation: player => {\n\t\treturn Presets.DefaultAPLs[player.getLevel()].rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecElementalShaman,\n\t\t\ttooltip: specNames[Spec.SpecElementalShaman],\n\t\t\tdefaultName: 'Elemental',\n\t\t\ticonUrl: getSpecIcon(Class.ClassShaman, 0),\n\n\t\t\ttalents: Presets.DefaultTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceUnknown,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t\t2: Presets.GearPresets[Phase.Phase2][0].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t\t2: Presets.GearPresets[Phase.Phase2][0].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ElementalShamanSimUI extends IndividualSimUI<Spec.SpecElementalShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecElementalShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["GearPhase1","PresetUtils.makePresetGear","GearPhase2","Phase2Gear","GearPhase3","Phase3Gear","GearPresets","Phase","Phase1","Phase2","Phase3","Phase4","Phase5","DefaultGear","APLPhase1","PresetUtils.makePresetAPLRotation","Phase1APL","APLPhase2","Phase2APL","APLPhase3","Phase3APL","APLPresets","DefaultAPLs","TalentsPhase1","name","data","SavedTalents","create","talentsString","TalentsPhase2","TalentsPhase3","TalentPresets","DefaultTalents","DefaultOptions","ElementalShamanOptions","DefaultConsumes","Consumes","defaultPotion","Potions","GreaterManaPotion","enchantedSigil","EnchantedSigil","LivingDreamsSigil","firePowerBuff","FirePowerBuff","ElixirOfFirepower","food","Food","FoodNightfinSoup","mainHandImbue","WeaponImbue","LesserWizardOil","offHandImbue","spellPowerBuff","SpellPowerBuff","ArcaneElixir","strengthBuff","StrengthBuff","ElixirOfGiants","zanzaBuff","ZanzaBuff","AtalaiMojoOfForbiddenMagic","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","aspectOfTheLion","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","manaSpringTotem","moonkinAura","strengthOfEarthTotem","DefaultIndividualBuffs","IndividualBuffs","fervorOfTheTempleExplorer","saygesFortune","SaygesFortune","SaygesDamage","songflowerSerenade","DefaultDebuffs","Debuffs","curseOfElementsNew","TristateEffectRegular","improvedScorch","serpentsStrikerFistDebuff","stormstrike","OtherDefaults","distanceFromTarget","profession1","Profession","Enchanting","profession2","Leatherworking","SPEC_CONFIG","registerSpecConfig","Spec","SpecElementalShaman","cssClass","cssScheme","knownIssues","warnings","epStats","Stat","StatIntellect","StatSpellPower","StatSpellDamage","StatFirePower","StatNaturePower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","StatAttackPower","StatStrength","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","player","stats","Stats","addStat","getTalents","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","race","Race","RaceTroll","gear","Presets.DefaultGear","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultTalents","specOptions","Presets.DefaultOptions","other","Presets.OtherDefaults","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","BuffDebuffInputs.BleedDebuff","otherInputs","inputs","OtherInputs.DistanceFromTarget","itemSwapConfig","itemSlots","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","note","customSections","encounterPicker","showExecuteProportion","presets","Presets.TalentPresets","rotations","Presets.APLPresets","Presets.GearPresets","autoRotation","Presets.DefaultAPLs","getLevel","rotation","raidSimPresets","spec","tooltip","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassShaman","defaultFactionRaces","Faction","Unknown","RaceUnknown","Alliance","Horde","defaultGear","ElementalShamanSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}