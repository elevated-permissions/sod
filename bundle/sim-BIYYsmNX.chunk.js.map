{"version":3,"file":"sim-BIYYsmNX.chunk.js","sources":["../../../ui/mage/inputs.ts","../../../ui/mage/presets.ts","../../../ui/mage/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport {\n\tMage_Options_ArmorType as ArmorType,\n} from '../core/proto/mage.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const Armor = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecMage, ArmorType>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: ArmorType.NoArmor, tooltip: 'No Armor' },\n\t\t{ actionId: () => ActionId.fromSpellId(22783), value: ArmorType.MageArmor },\n\t\t{ actionId: () => ActionId.fromSpellId(10220), value: ArmorType.IceArmor },\n\t],\n});\n\nexport const MageRotationConfig = {\n\tinputs: [],\n};\n","import { Phase } from '../core/constants/other';\nimport * as PresetUtils from '../core/preset_utils';\nimport {\n\tConsumes,\n\tDebuffs,\n\tEnchantedSigil,\n\tFirePowerBuff,\n\tFlask,\n\tFood,\n\tFrostPowerBuff,\n\tIndividualBuffs,\n\tPotions,\n\tProfession,\n\tRaidBuffs,\n\tSaygesFortune,\n\tSpellPowerBuff,\n\tTristateEffect,\n\tWeaponImbue,\n\tZanzaBuff,\n} from '../core/proto/common';\nimport { Mage_Options as MageOptions, Mage_Options_ArmorType as ArmorType } from '../core/proto/mage';\nimport { SavedTalents } from '../core/proto/ui';\nimport Phase1APLArcane from './apls/p1_arcane.apl.json';\nimport Phase1APLFire from './apls/p1_fire.apl.json';\nimport Phase2APLArcane from './apls/p2_arcane.apl.json';\nimport Phase2APLFire from './apls/p2_fire.apl.json';\n// import Phase3APLArcane from './apls/p3_arcane.apl.json';\nimport Phase3APLFire from './apls/p3_fire.apl.json';\nimport Phase3APLFrost from './apls/p3_frost.apl.json';\nimport Phase1GearFire from './gear_sets/p1_fire.gear.json';\nimport Phase1Gear from './gear_sets/p1_generic.gear.json';\nimport Phase2GearArcane from './gear_sets/p2_arcane.gear.json';\nimport Phase2GearFire from './gear_sets/p2_fire.gear.json';\nimport Phase2GearFrost from './gear_sets/p2_frost.gear.json';\nimport Phase3GearFire from './gear_sets/p3_fire.gear.json';\nimport Phase3GearFireFFB from './gear_sets/p3_fire_ffb.gear.json';\nimport Phase3GearFrostFFB from './gear_sets/p3_frost_ffb.gear.json';\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Gear Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const GearArcanePhase1 = PresetUtils.makePresetGear('P1 Arcane', Phase1Gear, {\n\tcustomCondition: player => player.getLevel() == 25,\n});\nexport const GearFirePhase1 = PresetUtils.makePresetGear('P1 Fire', Phase1GearFire, {\n\tcustomCondition: player => player.getLevel() == 25,\n});\nexport const GearFrostPhase1 = PresetUtils.makePresetGear('P1 Frost', Phase1Gear, {\n\tcustomCondition: player => player.getLevel() == 25,\n});\n\nexport const GearArcanePhase2 = PresetUtils.makePresetGear('P2 Arcane', Phase2GearArcane, {\n\tcustomCondition: player => player.getLevel() == 40,\n});\nexport const GearFirePhase2 = PresetUtils.makePresetGear('P2 Fire', Phase2GearFire, {\n\tcustomCondition: player => player.getLevel() == 40,\n});\nexport const GearFrostPhase2 = PresetUtils.makePresetGear('P2 Frost', Phase2GearFrost, {\n\tcustomCondition: player => player.getLevel() == 40,\n});\n\n// No new Phase 3 Arcane presets at the moment\nexport const GearArcanePhase3 = GearArcanePhase2;\nexport const GearFirePhase3 = PresetUtils.makePresetGear('P3 Fire', Phase3GearFire, {\n\tcustomCondition: player => player.getLevel() >= 50,\n});\nexport const GearFrostPhase3 = PresetUtils.makePresetGear('P3 Frost', Phase3GearFrostFFB, {\n\tcustomCondition: player => player.getLevel() >= 50,\n});\nexport const GearFrostfirePhase3 = PresetUtils.makePresetGear('P3 Fire FFB', Phase3GearFireFFB, {\n\tcustomCondition: player => player.getLevel() >= 50,\n});\n\nexport const GearPresets = {\n\t[Phase.Phase1]: [GearArcanePhase1, GearFirePhase1, GearFrostPhase1],\n\t[Phase.Phase2]: [GearArcanePhase2, GearFirePhase2, GearFrostPhase2],\n\t[Phase.Phase3]: [GearArcanePhase3, GearFirePhase3, GearFrostPhase3, GearFrostfirePhase3],\n};\n\nexport const DefaultGearArcane = GearPresets[Phase.Phase3][0];\nexport const DefaultGearFire = GearPresets[Phase.Phase3][1];\nexport const DefaultGearFrost = GearPresets[Phase.Phase3][2];\nexport const DefaultGearFrostfire = GearPresets[Phase.Phase3][3];\n\nexport const DefaultGear = DefaultGearFrostfire;\n\n///////////////////////////////////////////////////////////////////////////\n//                                 APL Presets\n///////////////////////////////////////////////////////////////////////////\n\nexport const APLArcanePhase1 = PresetUtils.makePresetAPLRotation('P1 Arcane', Phase1APLArcane, {\n\tcustomCondition: player => player.getLevel() == 25,\n});\nexport const APLFirePhase1 = PresetUtils.makePresetAPLRotation('P1 Fire', Phase1APLFire, {\n\tcustomCondition: player => player.getLevel() == 25,\n});\n\nexport const APLArcanePhase2 = PresetUtils.makePresetAPLRotation('P2 Arcane', Phase2APLArcane, {\n\tcustomCondition: player => player.getLevel() == 40,\n});\nexport const APLFirePhase2 = PresetUtils.makePresetAPLRotation('P2 Fire', Phase2APLFire, {\n\tcustomCondition: player => player.getLevel() == 40,\n});\n\n// No new Phase 3 Arcane presets at the moment\nexport const APLArcanePhase3 = APLArcanePhase2;\nexport const APLFirePhase3 = PresetUtils.makePresetAPLRotation('P3 Fire', Phase3APLFire, {\n\tcustomCondition: player => player.getLevel() >= 50,\n});\nexport const APLFrostPhase3 = PresetUtils.makePresetAPLRotation('P3 Frost', Phase3APLFrost, {\n\tcustomCondition: player => player.getLevel() >= 50,\n});\n\nexport const APLPresets = {\n\t[Phase.Phase1]: [APLArcanePhase1, APLFirePhase1, APLFirePhase1],\n\t[Phase.Phase2]: [APLArcanePhase2, APLFirePhase2, APLFirePhase2],\n\t[Phase.Phase3]: [APLArcanePhase3, APLFirePhase3, APLFrostPhase3],\n};\n\nexport const DefaultAPLs: Record<number, Record<number, PresetUtils.PresetRotation>> = {\n\t25: {\n\t\t0: APLPresets[Phase.Phase1][0],\n\t\t1: APLPresets[Phase.Phase1][1],\n\t\t2: APLPresets[Phase.Phase1][2],\n\t},\n\t40: {\n\t\t0: APLPresets[Phase.Phase2][0],\n\t\t1: APLPresets[Phase.Phase2][1],\n\t\t// Normally frost but frost is unfortunately just too bad to warrant including for now\n\t\t2: APLPresets[Phase.Phase2][2],\n\t\t// Frostfire\n\t\t3: APLPresets[Phase.Phase2][2],\n\t},\n\t50: {\n\t\t0: APLPresets[Phase.Phase3][0],\n\t\t1: APLPresets[Phase.Phase3][1],\n\t\t2: APLPresets[Phase.Phase3][2],\n\t},\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Talent Presets\n///////////////////////////////////////////////////////////////////////////\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\n\nexport const TalentsArcanePhase1 = PresetUtils.makePresetTalents('P1 Arcane', SavedTalents.create({ talentsString: '22500502' }), {\n\tcustomCondition: player => player.getLevel() == 25,\n});\nexport const TalentsFirePhase1 = PresetUtils.makePresetTalents('P1 Fire', SavedTalents.create({ talentsString: '-5050020121' }), {\n\tcustomCondition: player => player.getLevel() == 25,\n});\n\nexport const TalentsArcanePhase2 = PresetUtils.makePresetTalents('P2 Arcane', SavedTalents.create({ talentsString: '2250050310031531' }), {\n\tcustomCondition: player => player.getLevel() == 40,\n});\nexport const TalentsFirePhase2 = PresetUtils.makePresetTalents('P2 Fire', SavedTalents.create({ talentsString: '-5050020123033151' }), {\n\tcustomCondition: player => player.getLevel() == 40,\n});\n\n// No new Phase 3 Arcane presets at the moment\nexport const TalentsArcanePhase3 = TalentsArcanePhase2;\nexport const TalentsFirePhase3 = PresetUtils.makePresetTalents('P3 Fire', SavedTalents.create({ talentsString: '-0550020123033151-2035' }), {\n\tcustomCondition: player => player.getLevel() >= 50,\n});\nexport const TalentsFrostPhase3 = PresetUtils.makePresetTalents('P3 Frost', SavedTalents.create({ talentsString: '-055-20350203100351051' }), {\n\tcustomCondition: player => player.getLevel() >= 50,\n});\n\nexport const TalentPresets = {\n\t[Phase.Phase1]: [TalentsArcanePhase1, TalentsFirePhase1, TalentsFirePhase1],\n\t[Phase.Phase2]: [TalentsArcanePhase2, TalentsFirePhase2, TalentsFirePhase2],\n\t[Phase.Phase3]: [TalentsArcanePhase3, TalentsFirePhase3, TalentsFrostPhase3],\n};\n\nexport const DefaultTalentsArcane = TalentPresets[Phase.Phase3][0];\nexport const DefaultTalentsFire = TalentPresets[Phase.Phase3][1];\nexport const DefaultTalentsFrost = TalentPresets[Phase.Phase3][2];\n// export const DefaultTalentsFrostfire = TalentPresets[Phase.Phase3][2];\n\nexport const DefaultTalents = DefaultTalentsFire;\n\n// export const PresetBuildArcane = PresetUtils.makePresetBuild('Arcane', DefaultGearArcane, DefaultTalentsArcane, DefaultAPLs[50][0]);\nexport const PresetBuildFire = PresetUtils.makePresetBuild('Fire', DefaultGearFire, DefaultTalentsFire, DefaultAPLs[50][1]);\nexport const PresetBuildFrost = PresetUtils.makePresetBuild('Frost FFB', DefaultGearFrost, DefaultTalentsFrost, DefaultAPLs[50][2]);\nexport const PresetBuildFrostfire = PresetUtils.makePresetBuild('Fire FFB', DefaultGearFrostfire, DefaultTalentsFire, DefaultAPLs[50][1]);\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Options\n///////////////////////////////////////////////////////////////////////////\n\nexport const DefaultOptions = MageOptions.create({\n\tarmor: ArmorType.MageArmor,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.GreaterManaPotion,\n\tenchantedSigil: EnchantedSigil.LivingDreamsSigil,\n\tfirePowerBuff: FirePowerBuff.ElixirOfFirepower,\n\tflask: Flask.FlaskOfRestlessDreams,\n\tfood: Food.FoodSagefishDelight,\n\tfrostPowerBuff: FrostPowerBuff.ElixirOfFrostPower,\n\tmainHandImbue: WeaponImbue.LesserWizardOil,\n\tmildlyIrradiatedRejuvPot: true,\n\tspellPowerBuff: SpellPowerBuff.ArcaneElixir,\n\tzanzaBuff: ZanzaBuff.AtalaiMojoOfForbiddenMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\taspectOfTheLion: true,\n\tdivineSpirit: true,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tmanaSpringTotem: TristateEffect.TristateEffectImproved,\n\tmoonkinAura: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tfervorOfTheTempleExplorer: true,\n\tsaygesFortune: SaygesFortune.SaygesDamage,\n\tsongflowerSerenade: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tcurseOfElementsNew: TristateEffect.TristateEffectRegular,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Alchemy,\n\tprofession2: Profession.Enchanting,\n};\n","import * as OtherInputs from '../core/components/other_inputs.js';\nimport { Phase } from '../core/constants/other.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { Player } from '../core/player.js';\nimport { Class, Faction, PartyBuffs, Race, Spec, Stat } from '../core/proto/common.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport * as MageInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecMage, {\n\tcssClass: 'mage-sim-ui',\n\tcssScheme: 'mage',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellPower,\n\t\tStat.StatArcanePower,\n\t\tStat.StatFirePower,\n\t\tStat.StatFrostPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellPower,\n\t\tStat.StatArcanePower,\n\t\tStat.StatFirePower,\n\t\tStat.StatFrostPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.2,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatArcanePower]: 1,\n\t\t\t[Stat.StatFirePower]: 1,\n\t\t\t[Stat.StatFrostPower]: 1,\n\t\t\t// Aggregated across 3 builds\n\t\t\t[Stat.StatSpellHit]: 5.0,\n\t\t\t[Stat.StatSpellCrit]: 6.17,\n\t\t\t[Stat.StatSpellHaste]: 3.0,\n\t\t\t[Stat.StatMP5]: 0.09,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.DefaultTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [MageInputs.Armor],\n\t// Inputs to include in the 'Rotation' section on the settings tab.\n\trotationInputs: MageInputs.MageRotationConfig,\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.DistanceFromTarget, OtherInputs.TankAssignment],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [...Presets.APLPresets[Phase.Phase3], ...Presets.APLPresets[Phase.Phase2], ...Presets.APLPresets[Phase.Phase1]],\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [...Presets.TalentPresets[Phase.Phase3], ...Presets.TalentPresets[Phase.Phase2], ...Presets.TalentPresets[Phase.Phase1]],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [...Presets.GearPresets[Phase.Phase3], ...Presets.GearPresets[Phase.Phase2], ...Presets.GearPresets[Phase.Phase1]],\n\t\tbuilds: [\n\t\t\t// Presets.PresetBuildArcane,\n\t\t\tPresets.PresetBuildFire,\n\t\t\tPresets.PresetBuildFrostfire,\n\t\t\tPresets.PresetBuildFrost,\n\t\t],\n\t},\n\n\tautoRotation: player => {\n\t\tconst specNumber = player.getTalentTree();\n\t\treturn Presets.DefaultAPLs[player.getLevel()][specNumber].rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecMage,\n\t\t\ttooltip: 'Arcane Mage',\n\t\t\tdefaultName: 'Arcane',\n\t\t\ticonUrl: getSpecIcon(Class.ClassMage, 0),\n\n\t\t\ttalents: Presets.DefaultTalentsArcane.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][0].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecMage,\n\t\t\ttooltip: 'Fire Mage',\n\t\t\tdefaultName: 'Fire',\n\t\t\ticonUrl: getSpecIcon(Class.ClassMage, 1),\n\n\t\t\ttalents: Presets.DefaultTalentsFire.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][1].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][1].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecMage,\n\t\t\ttooltip: 'Frost Mage',\n\t\t\tdefaultName: 'Frost',\n\t\t\ticonUrl: getSpecIcon(Class.ClassMage, 2),\n\n\t\t\ttalents: Presets.DefaultTalentsFrost.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][2].gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.GearPresets[Phase.Phase1][2].gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class MageSimUI extends IndividualSimUI<Spec.SpecMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecMage>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["Armor","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","ArmorType","NoArmor","tooltip","actionId","ActionId","fromSpellId","MageArmor","IceArmor","GearArcanePhase1","PresetUtils.makePresetGear","Phase1Gear","customCondition","player","getLevel","GearFirePhase1","Phase1GearFire","GearFrostPhase1","GearArcanePhase2","Phase2GearArcane","GearFirePhase2","Phase2GearFire","GearFrostPhase2","Phase2GearFrost","GearArcanePhase3","GearFirePhase3","Phase3GearFire","GearFrostPhase3","Phase3GearFrostFFB","GearFrostfirePhase3","Phase3GearFireFFB","GearPresets","Phase","Phase1","Phase2","Phase3","DefaultGearFire","DefaultGearFrost","DefaultGearFrostfire","DefaultGear","APLArcanePhase1","PresetUtils.makePresetAPLRotation","Phase1APLArcane","APLFirePhase1","Phase1APLFire","APLArcanePhase2","Phase2APLArcane","APLFirePhase2","Phase2APLFire","APLArcanePhase3","APLFirePhase3","Phase3APLFire","APLFrostPhase3","Phase3APLFrost","APLPresets","DefaultAPLs","TalentsArcanePhase1","PresetUtils.makePresetTalents","SavedTalents","create","talentsString","TalentsFirePhase1","TalentsArcanePhase2","TalentsFirePhase2","TalentsArcanePhase3","TalentsFirePhase3","TalentsFrostPhase3","TalentPresets","DefaultTalentsArcane","DefaultTalentsFire","DefaultTalentsFrost","DefaultTalents","PresetBuildFire","PresetUtils.makePresetBuild","PresetBuildFrost","PresetBuildFrostfire","DefaultOptions","MageOptions","armor","DefaultConsumes","Consumes","defaultPotion","Potions","GreaterManaPotion","enchantedSigil","EnchantedSigil","LivingDreamsSigil","firePowerBuff","FirePowerBuff","ElixirOfFirepower","flask","Flask","FlaskOfRestlessDreams","food","Food","FoodSagefishDelight","frostPowerBuff","FrostPowerBuff","ElixirOfFrostPower","mainHandImbue","WeaponImbue","LesserWizardOil","mildlyIrradiatedRejuvPot","spellPowerBuff","SpellPowerBuff","ArcaneElixir","zanzaBuff","ZanzaBuff","AtalaiMojoOfForbiddenMagic","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","aspectOfTheLion","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","manaSpringTotem","moonkinAura","DefaultIndividualBuffs","IndividualBuffs","fervorOfTheTempleExplorer","saygesFortune","SaygesFortune","SaygesDamage","songflowerSerenade","DefaultDebuffs","Debuffs","curseOfElementsNew","TristateEffectRegular","OtherDefaults","distanceFromTarget","profession1","Profession","Alchemy","profession2","Enchanting","SPEC_CONFIG","registerSpecConfig","Spec","SpecMage","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpellPower","StatArcanePower","StatFirePower","StatFrostPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.DefaultTalents","data","specOptions","Presets.DefaultOptions","other","Presets.OtherDefaults","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","MageInputs.Armor","rotationInputs","inputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","rotations","Presets.APLPresets","Presets.TalentPresets","Presets.GearPresets","builds","Presets.PresetBuildFire","Presets.PresetBuildFrostfire","Presets.PresetBuildFrost","autoRotation","specNumber","getTalentTree","Presets.DefaultAPLs","rotation","raidSimPresets","spec","defaultName","iconUrl","getSpecIcon","Class","ClassMage","Presets.DefaultTalentsArcane","otherDefaults","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceGnome","Horde","RaceTroll","defaultGear","Presets.DefaultTalentsFire","Presets.DefaultTalentsFrost","MageSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}